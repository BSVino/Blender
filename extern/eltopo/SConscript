#!/usr/bin/python
import sys
import os

Import('env')

defs = ' -DUSE_FORTRAN_BLAS -DNOGUI'
cflags = []

if env['OURPLATFORM'] in ('win32-vc', 'win64-vc'):
    defs += ' WIN32 NDEBUG _WINDOWS'
    #cflags += ['/MT', '/W3', '/GX', '/O2', '/Op']
    cflags += ['/MT', '/W3', '/GX', '/Og', '/Ot', '/Ob1', '/Op', '/G6', '/O3', '/EHcs']
elif env['OURPLATFORM'] in ('win32-mingw', 'linuxcross'):
    defs += ' NDEBUG'
    cflags += ['-O2']
elif env['OURPLATFORM'] in ('linux', 'freebsd4', 'freebsd5'):
    defs += ' NDEBUG'
    cflags += ['-O2']
elif sys.platform=='darwin':
    defs += ' NDEBUG'
    cflags += ['-O2','-pipe', '-fPIC', '-funsigned-char', '-ffast-math']

eltopo_src = env.Glob("common/*.cpp") + env.Glob("eltopo3d/*.cpp") + env.Glob("common/newsparse/*.cpp") + env.Glob("common/sparse/*.cpp") + env.Glob("common/meshes/*.cpp") + ["eltopo-capi.cpp"]
incs = '. common eltopo3d common/newsparse common/meshes common/sparse'

env.BlenderLib ( libname = 'extern_eltopo3d', sources=eltopo_src, includes=Split(incs), defines=Split(defs), libtype=['extern','player'], priority=[20,137], compileflags=cflags )

